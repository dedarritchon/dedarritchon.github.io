{"version":3,"sources":["components/FontAwesome.js","components/Toggle.js","hooks/PersistentState.js","components/Buttons.js","components/Content.js","components/Particles.js","App.js","serviceWorker.js","index.js"],"names":["registerIcons","library","add","faGithub","faLinkedin","faFileAlt","faPaperPlane","faSun","faMoon","DarkToggle","key","defaultValue","React","useState","persistentState","localStorage","getItem","JSON","parse","state","setState","useEffect","window","setItem","stringify","usePersistentState","undefined","isDark","setIsDark","document","documentElement","classList","remove","className","checked","onChange","event","target","icons","icon","style","color","unchecked","aria-label","ThemeToggle","Component","DATA","href","aria","label","Icon","rel","size","Buttons","map","props","i","Content","PARAMS","Particle","id","width","height","params","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81667fb3.chunk.js","sourcesContent":["// import the library\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n// import individual icons\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons' //fab\r\nimport { faFileAlt, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\"; //fas\r\nimport { faSun, faMoon } from \"@fortawesome/free-regular-svg-icons\"; //far\r\n\r\n\r\nexport default function registerIcons() {\r\n    library.add(\r\n        faGithub,\r\n        faLinkedin,\r\n        faFileAlt,\r\n        faPaperPlane,\r\n        faSun,\r\n        faMoon,\r\n    );\r\n}\r\n","import React, { Component, useEffect } from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\n// import { useMediaQuery } from \"react-responsive\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport usePersistentState from '../hooks/PersistentState';\r\nimport registerIcons from './FontAwesome';\r\n\r\nregisterIcons();\r\n\r\n// const DARK_CLASS = \"dark\";\r\n\r\nconst DarkToggle = () => {\r\n    // const systemPrefersDark = useMediaQuery(\r\n    //     {\r\n    //         query: \"(prefers-color-scheme: dark)\"\r\n    //     },\r\n    //     undefined,\r\n    //     prefersDark => {\r\n    //         setIsDark(prefersDark);\r\n    //     }\r\n    // );\r\n    // const [isDark, setIsDark] = useState(systemPrefersDark);\r\n\r\n    const [isDark, setIsDark] = usePersistentState('theme', undefined);\r\n\r\n    useEffect(() => {\r\n        if (isDark) {\r\n            document.documentElement.classList.add('other');\r\n        } else {\r\n            document.documentElement.classList.remove('other');\r\n        }\r\n    }, [isDark]);\r\n\r\n    return (\r\n        <div className=\"toggle-container\">\r\n            <Toggle\r\n                className=\"toggle\"\r\n                checked={isDark}\r\n                onChange={event => setIsDark(event.target.checked)}\r\n                icons={{\r\n                    checked: <FontAwesomeIcon icon={[\"far\", \"sun\"]} style={{ color: \"#F39C12\" }} />,\r\n                    unchecked: <FontAwesomeIcon icon={[\"far\", \"moon\"]} style={{ color: \"#F1C40F\" }} />\r\n                }}\r\n                aria-label=\"Theme toggle\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nclass ThemeToggle extends Component {\r\n    render() {\r\n        return (\r\n            <DarkToggle />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemeToggle;","import React from 'react';\r\n\r\nexport default function usePersistentState(key, defaultValue) {\r\n    const [state, setState] = React.useState(() => {\r\n        const persistentState = localStorage.getItem(key);\r\n        return persistentState ? JSON.parse(persistentState) : defaultValue;\r\n    });\r\n    React.useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [state, key]);\r\n    return [state, setState];\r\n}","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport registerIcons from './FontAwesome';\r\n\r\nregisterIcons();\r\n\r\nconst DATA = [\r\n    {\r\n        href: \"https://github.com/dedarritchon\",\r\n        aria: \"Visit my GitHub profile to learn more about the open source projects I have contributed to\",\r\n        icon: [\"fab\", \"github\"],\r\n        label: \"Github\",\r\n    },\r\n    {\r\n        href: \"https://www.linkedin.com/in/dedarritchon/\",\r\n        aria: \"Visit my LinkedIn profile to learn more about my education and work experience\",\r\n        icon: [\"fab\", \"linkedin\"],\r\n        label: \"LinkedIn\",\r\n    },\r\n    {\r\n        href: \"https://drive.google.com/file/d/1ASG5JTR_lZI1b3scN3kKAgulgOTe4uNh/view?usp=sharing\",\r\n        aria: \"Visit Google Drive to view and download a copy of my resume\",\r\n        icon: [\"fas\", \"file-alt\"],\r\n        label: \"Resume\",\r\n    },\r\n    {\r\n        href: \"mailto:dedarritchon@uc.cl\",\r\n        aria: \"Open a pre-addressed email prompt to me that you can fill out\",\r\n        icon: [\"fas\", \"paper-plane\"],\r\n        label: \"Email me\",\r\n    }\r\n];\r\n\r\nconst Icon = ({ href, aria, icon, label }) => {\r\n    return (\r\n        <span className=\"button\">\r\n            <a href={href} target=\"_self\" aria-label={aria} rel=\"noopener noreferrer\">\r\n                <FontAwesomeIcon className=\"icon\" icon={icon} size=\"3x\" />\r\n                <span className=\"icon_title\">{label}</span>\r\n            </a>\r\n        </span>\r\n    );\r\n};\r\n\r\nclass Buttons extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {DATA.map((props, i) => (\r\n                    <Icon {...props} key={i} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React, { Component } from 'react';\r\nimport Buttons from './Buttons';\r\n// import logo from './profile.png';\r\n\r\nclass Content extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n                <h1 className=\"name\" aria-label=\"My name is Daniel Darritchon\">Daniel Darritchon</h1>\r\n                <h2 className=\"title\" aria-label=\"I am a software developer and engineer\">Software Engineer</h2>\r\n\r\n                {/* <p>I'm passionate about energy, space, and technology. If I'm not working on a project, you'll usually find me on a soccer field.</p>\r\n                <p>I have just completed my B.S. in Computer Science at the University of North Carolina - Chapel Hill.</p>\r\n                <p>If you're interested in what I'm working on now or what I've done in the past, be sure to check out my resume and the other links below.</p> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst PARAMS = {\r\n    \"particles\": {\r\n        \"number\": {\r\n            \"value\": 60,\r\n            \"density\": {\r\n                \"enable\": true,\r\n                \"value_area\": 800\r\n            }\r\n        },\r\n        \"color\": {\r\n            \"value\": [\r\n                \"#c311e7\",\r\n                \"#90ee90\",\r\n                \"#4dc9ff\",\r\n                \"#ffd300\",\r\n                \"#ff6961\"\r\n            ]\r\n        },\r\n        \"shape\": {\r\n            \"type\": \"circle\",\r\n            \"stroke\": {\r\n                \"width\": 0,\r\n                \"color\": \"#000000\"\r\n            },\r\n            \"polygon\": {\r\n                \"nb_sides\": 5\r\n            },\r\n            \"image\": {\r\n                \"src\": \"img/github.svg\",\r\n                \"width\": 100,\r\n                \"height\": 100\r\n            }\r\n        },\r\n        \"opacity\": {\r\n            \"value\": .9,\r\n            \"random\": false,\r\n            \"anim\": {\r\n                \"enable\": false,\r\n                \"speed\": 1,\r\n                \"opacity_min\": .5,\r\n                \"sync\": false\r\n            }\r\n        },\r\n        \"size\": {\r\n            \"value\": 4,\r\n            \"random\": true,\r\n            \"anim\": {\r\n                \"enable\": false,\r\n                \"speed\": 30,\r\n                \"size_min\": 0.1,\r\n                \"sync\": true\r\n            }\r\n        },\r\n        \"line_linked\": {\r\n            \"enable\": true,\r\n            \"distance\": 100,\r\n            \"color\": \"#eeeeee\",\r\n            \"opacity\": 0.4,\r\n            \"width\": 1\r\n        },\r\n        \"move\": {\r\n            \"enable\": true,\r\n            \"speed\": 3,\r\n            \"direction\": \"none\",\r\n            \"random\": false,\r\n            \"straight\": false,\r\n            \"out_mode\": \"bounce\",\r\n            \"bounce\": false,\r\n            \"attract\": {\r\n                \"enable\": false,\r\n                \"rotateX\": 600,\r\n                \"rotateY\": 1200\r\n            }\r\n        }\r\n    },\r\n    \"interactivity\": {\r\n        \"detect_on\": \"canvas\",\r\n        \"events\": {\r\n            \"onhover\": {\r\n                \"enable\": true,\r\n                \"mode\": \"repulse\"\r\n            },\r\n            \"onclick\": {\r\n                \"enable\": true,\r\n                \"mode\": \"push\"\r\n            },\r\n            \"resize\": true\r\n        },\r\n        \"modes\": {\r\n            \"grab\": {\r\n                \"distance\": 400,\r\n                \"line_linked\": {\r\n                    \"opacity\": 1\r\n                }\r\n            },\r\n            \"bubble\": {\r\n                \"distance\": 400,\r\n                \"size\": 40,\r\n                \"duration\": 2,\r\n                \"opacity\": 8,\r\n                \"speed\": 3\r\n            },\r\n            \"repulse\": {\r\n                \"distance\": 100,\r\n                \"duration\": 1\r\n            },\r\n            \"push\": {\r\n                \"particles_nb\": 3\r\n            },\r\n            \"remove\": {\r\n                \"particles_nb\": 2\r\n            }\r\n        }\r\n    },\r\n    \"retina_detect\": true\r\n    // *EE^WDte@VPnyi&o9vE5X@WbWNe*k5ka\r\n}\r\n\r\n\r\nclass Particle extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"particles-js\">\r\n                <Particles width='100vw' height=\"100vh\" params={PARAMS} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Particle;\r\n","import React from 'react';\r\nimport './stylesheets/_index.scss';\r\nimport ThemeToggle from './components/Toggle'\r\nimport Content from './components/Content'\r\nimport Buttons from './components/Buttons';\r\nimport Particle from './components/Particles';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <ThemeToggle />\r\n            <Content />\r\n            <Buttons />\r\n            <Particle />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/PersistentState.jsx","themes/Theme.jsx","App/AppContext.jsx","icons/GitHub.jsx","icons/LinkedIn.jsx","icons/Resume.jsx","icons/Email.jsx","components/Content.jsx","components/Toggle.jsx","components/Buttons.jsx","components/Matrix.jsx","components/Footer.jsx","components/Particles.jsx","App/App.jsx","index.jsx"],"names":["usePersistentState","key","defaultValue","useState","persistentState","localStorage","getItem","JSON","parse","state","setState","useEffect","window","setItem","stringify","dark","primaryTextColor","secondaryTextColor","tertiaryTextColor","background","shadowColor","AppContext","createContext","isDark","Boolean","setIsDark","ThemeProvider","children","theme","isMobile","matchMedia","matches","Provider","value","GitHub","role","viewBox","xmlns","fill","d","LinkedIn","Resume","Email","sharedStyles","styled","main","input","label","css","C","Name","h1","Title","h2","Content","useContext","data-v2","aria-label","Container","div","Buttons","DATA","href","aria","icon","map","i","className","target","rel","P","p","a","Matrix","ref","ctx","getContext","height","innerHeight","width","innerWidth","japan","split","columns","drops","x","colors","color","Math","floor","random","length","setInterval","fillStyle","fillRect","font","font_size","text","fillText","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d01dc92.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst usePersistentState = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    const persistentState = localStorage.getItem(key);\n    return persistentState ? JSON.parse(persistentState) : defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n\n  return [state, setState];\n};\n\nexport default usePersistentState;\n","export const dark = {\n  key: 'dark',\n  primaryTextColor: '#FFF',\n  secondaryTextColor: '#CCC',\n  tertiaryTextColor: '#999',\n  background: '#000',\n  shadowColor: 'rgba(0, 0, 0, 0.5)',\n};\n\nexport const light = {\n  key: 'light',\n  primaryTextColor: '#000',\n  secondaryTextColor: '#333',\n  tertiaryTextColor: '#777',\n  background: '#FFF',\n  shadowColor: 'rgba(255, 255, 255, 0.5)',\n};\n","import React, { createContext } from 'react';\n\nimport usePersistentState from './../hooks/PersistentState';\nimport { dark, light } from '../themes/Theme';\n\nexport const AppContext = createContext({\n  isDark: Boolean,\n  setIsDark: () => {},\n});\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDark, setIsDark] = usePersistentState('theme', true); // default: dark mode\n  const theme = dark;\n\n  const isMobile = window.matchMedia('(max-device-width: 820px) and (-webkit-min-device-pixel-ratio: 2)').matches;\n\n  return <AppContext.Provider value={{ isDark, setIsDark, theme, isMobile }}>{children}</AppContext.Provider>;\n};\n","import React from 'react';\n\nexport const GitHub = () => (\n  <svg role='img' viewBox='0 0 512 512' xmlns='http://www.w3.org/2000/svg'>\n    <title>GitHub Icon</title>\n    <path fill='currentColor' d='M296.133 354.174c49.885-5.891 102.942-24.029 102.942-110.192 0-24.49-8.624-44.448-22.67-59.869 2.266-5.89 9.515-28.114-2.734-58.947 0 0-18.139-5.898-60.759 22.669-18.139-4.983-38.09-8.163-56.682-8.163-19.053 0-39.011 3.18-56.697 8.163-43.082-28.567-61.22-22.669-61.22-22.669-12.241 30.833-4.983 53.057-2.718 58.947-14.061 15.42-22.677 35.379-22.677 59.869 0 86.163 53.057 104.301 102.942 110.192-6.344 5.452-12.241 15.873-14.507 30.387-12.702 5.438-45.808 15.873-65.758-18.592 0 0-11.795-21.31-34.012-22.669 0 0-22.224-.453-1.813 13.592 0 0 14.96 6.812 24.943 32.653 0 0 13.6 43.089 76.179 29.48v38.543c0 5.906-4.53 12.702-15.865 10.89C96.139 438.977 32.2 354.626 32.2 255.77c0-123.807 100.216-224.022 224.03-224.022 123.347 0 224.023 100.216 223.57 224.022 0 98.856-63.946 182.754-152.828 212.688-11.342 2.266-15.873-4.53-15.873-10.89V395.45c.001-20.873-6.811-34.465-14.966-41.276zM512 256.23C512 114.73 397.263 0 256.23 0 114.73 0 0 114.73 0 256.23 0 397.263 114.73 512 256.23 512 397.263 512 512 397.263 512 256.23z'/>\n  </svg>\n);\n","import React from 'react';\n\nexport const LinkedIn = () => (\n  <svg role='img' viewBox='0 0 512 512' xmlns='http://www.w3.org/2000/svg'>\n    <title>LinkedIn Icon</title>\n    <path fill='currentColor' d='M160.008 423h-70V197h70zm6.984-298.004c0-22.629-18.36-40.996-40.976-40.996C103.312 84 85 102.367 85 124.996 85 147.633 103.313 166 126.016 166c22.617 0 40.976-18.367 40.976-41.004zM422 298.664C422 237.996 409.184 193 338.312 193c-34.054 0-56.914 17.031-66.246 34.742H272V197h-68v226h68V310.79c0-29.388 7.48-57.856 43.906-57.856 35.93 0 37.094 33.605 37.094 59.722V423h69zM512 452V60c0-33.086-26.914-60-60-60H60C26.914 0 0 26.914 0 60v392c0 33.086 26.914 60 60 60h392c33.086 0 60-26.914 60-60zM455.26 32C466.694 32 480 45.305 480 56.74v398.52c0 11.435-13.305 24.74-24.74 24.74H56.74C45.306 480 32 466.695 32 455.26V56.74C32 45.306 45.305 32 56.74 32zM452 40'/>\n  </svg>\n);\n","import React from 'react';\n\nexport const Resume = () => (\n  <svg role='img' viewBox='0 0 512 512' xmlns='http://www.w3.org/2000/svg'>\n    <title>Resume Icon</title>\n    <path fill='currentColor' d='M433.9 97.95L350 14.05c-9-9-21.2-14.1-33.9-14.1H112c-26.5.1-48 21.6-48 48.1v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-332.1c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H320v-95.5c2.8.7 5.3 2.1 7.4 4.2zM400 480.05H112c-8.8 0-16-7.2-16-16v-416c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-48-244v8c0 6.6-5.4 12-12 12H172c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm0 64v8c0 6.6-5.4 12-12 12H172c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm0 64v8c0 6.6-5.4 12-12 12H172c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12z'/>\n  </svg>\n);\n","import React from 'react';\n\nexport const Email = () => (\n  <svg role='img' viewBox='0 0 512 512' xmlns='http://www.w3.org/2000/svg'>\n    <title>Email Icon</title>\n    <path fill='currentColor' d='M464.004 4.326L15.986 262.714c-23 13.3-20.7 47.198 3.8 57.297l140.206 57.997v101.996c0 30.198 37.802 43.298 56.702 20.299l60.703-73.797L403.8 478.704c19.101 7.9 40.702-4.2 43.802-24.7l64.003-417.08c4.1-26.698-24.601-45.897-47.602-32.598zm-272.01 475.678v-88.796l54.501 22.499zm224.008-30.899l-206.208-85.196L409.302 128.12c4.8-5.6-2.9-13.199-8.5-8.4l-255.31 217.59-113.505-46.797L480.004 32.025z'/>\n  </svg>\n);\n","import React, { useContext } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { AppContext } from './../App/AppContext';\n\nconst sharedStyles = css`\n  transition: color 0.5s linear;\n  font-weight: normal;\n  position: relative;\n  z-index: 1;\n`;\n\nconst C = {\n  Name: styled.h1`\n    ${sharedStyles};\n    font-size: 6rem;\n    margin: 0 0 3.5rem;\n    color: ${({ theme }) => theme.primaryTextColor};\n    @media only screen and (max-device-width: 820px) and (-webkit-min-device-pixel-ratio: 2) {\n      font-size: 4.5rem;\n    }\n  `,\n  Title: styled.h2`\n    ${sharedStyles};\n    font-size: 3.5rem;\n    margin: 4rem 0;\n    color: ${({ theme }) => theme.secondaryTextColor};\n    @media only screen and (max-device-width: 820px) and (-webkit-min-device-pixel-ratio: 2) {\n      font-size: 2.5rem;\n    }\n  `,\n};\n\nexport const Content = () => {\n  const { theme } = useContext(AppContext);\n\n  return (\n    <div>\n      <C.Name theme={theme} data-v2='name' aria-label='My name is Daniel Darritchon'>Daniel Darritchon</C.Name>\n      <C.Title theme={theme} data-v2='title' aria-label='I am a software engineer'>Software Engineer</C.Title>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { AppContext } from './../App/AppContext';\nimport { Moon, Sun } from './../icons';\n\nconst T = {\n  Container: styled.main`\n    position: fixed;\n    z-index: 1;\n    top: 1rem;\n    right: 1rem;\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n\n    :active {\n      -webkit-transform: scale(0.9);\n      transform: scale(0.9);\n    }\n  `,\n  Toggle: styled.input`\n    display: none;\n  `,\n  Switch: styled.label`\n    cursor: pointer;\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n    padding: 0.75rem;\n    background-color: ${({ theme }) => theme.shadowColor};\n    border-radius: 25%;\n    box-shadow: 0 0 0.25rem 0.25rem rgba(128, 128, 128, 0.25);\n    align-items: center;\n    justify-content: center;\n    transition: background-color 0.5s linear;\n    font-size: 0.5rem;\n  `,\n};\n\nexport const Toggle = () => {\n  const { isDark, setIsDark, theme } = useContext(AppContext);\n\n  return (\n    <T.Container>\n      <T.Toggle id='toggle' name='toggle' type='checkbox' checked={isDark} onChange={(e) => setIsDark(e.target.checked)} />\n      <T.Switch theme={theme} htmlFor='toggle'>\n        {isDark ? <Moon /> : <Sun />}\n      </T.Switch>\n    </T.Container>\n  );\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { AppContext } from './../App/AppContext';\nimport { GitHub, LinkedIn, Resume, Email } from './../icons';\n\nconst Container = styled.div`\n  a,\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n  .button-container {\n    display: inline-block;\n    height: 6rem;\n    width: 6rem;\n    margin: 0 1.75rem;\n  }\n  .button {\n    transition: color 0.5s linear;\n    height: 6rem;\n    width: 6rem;\n    color: ${({ theme }) => theme.primaryTextColor};\n    display: table-cell;\n    vertical-align: middle;\n    text-align: center;\n    text-decoration: none;\n    position: relative;\n    z-index: 1;\n    border-radius: 25%;\n  }\n  .icon {\n    height: 4.5rem;\n    width: 4.5rem;\n    padding: 1rem;\n  }\n  .icon_title {\n    font-size: 1.25rem;\n  }\n  .button:hover {\n    background-color: ${({ theme }) => theme.shadowColor};\n    box-shadow: 0 0 0.75rem 0.75rem rgba(128, 128, 128, 0.25);\n  }\n  .button:active {\n    -webkit-transform: scale(0.9);\n    transform: scale(0.9);\n  }\n  .button-container .icon_title {\n    display: none;\n  }\n  .button-container:hover .icon_title {\n    display: initial;\n  }\n  .button-container:hover .icon {\n    display: none;\n  }\n  @media only screen and (max-device-width: 820px) and (-webkit-min-device-pixel-ratio: 2) {\n    .button-container {\n      height: 5rem;\n      width: 5rem;\n      margin: 0 0.8rem;\n    }\n    .button {\n      height: 5rem;\n      width: 5rem;\n    }\n    .icon {\n      height: 4rem;\n      width: 4rem;\n      padding: 0.5rem;\n    }\n    .icon_title {\n      font-size: 1rem;\n    }\n  }\n`;\n\nexport const Buttons = () => {\n  const { theme } = useContext(AppContext);\n\n  const DATA = [\n    {\n        href: \"https://github.com/dedarritchon\",\n        aria: \"Visit my GitHub profile to learn more about the projects I have created and contributed to\",\n        icon: <GitHub />,\n        label: \"Github\",\n    },\n    {\n        href: \"https://www.linkedin.com/in/dedarritchon/\",\n        aria: \"Visit my LinkedIn profile to learn more about my education and work experience\",\n        icon: <LinkedIn />,\n        label: \"LinkedIn\",\n    },\n    {\n        href: \"https://drive.google.com/file/d/1ASG5JTR_lZI1b3scN3kKAgulgOTe4uNh/view?usp=sharing\",\n        aria: \"Visit Google Drive to view and download a copy of my resume\",\n        icon: <Resume />,\n        label: \"Resume\",\n    },\n    {\n        href: \"mailto:dedarritchon@uc.cl\",\n        aria: \"Open a pre-addressed email prompt to me that you can fill out\",\n        icon: <Email />,\n        label: \"Email\",\n    }\n  ];\n\n  return (\n    <Container theme={theme}>\n      {DATA.map(({ href, aria, icon, label }, i) => (\n        <span className='button-container' key={i}>\n          <a className='button' href={href} target='_self' aria-label={aria} rel='noopener noreferrer'>\n            <div className='icon'>{icon}</div>\n            <span className='icon_title' data-v2={label}>{label}</span>\n          </a>\n        </span>\n      ))}\n    </Container>\n  );\n};","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Particles as ReactParticles } from 'react-tsparticles';\n\nimport { AppContext } from './../App/AppContext';\n\nconst P = {\n  Container: styled.div`\n    transition: background-color 0.5s linear;\n    position: absolute;\n    background-color: ${({ theme }) => theme.background};\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: 50% 50%;\n    z-index: 0;\n  `,\n};\n\nexport const Matrix = () => {\n  const { theme } = useContext(AppContext);\n\n  var setContext = (ref) => {\n    let ctx = ref.getContext('2d')\n    //making the canvas full screen\n    ref.height = window.innerHeight;\n    ref.width = window.innerWidth;\n\n    //japanese characters\n    var japan = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%+-/~{[|`]}ば司立肌切チじを飯端めなだごさ対全分人ぜち使\";\n    //converting the string into an array of single characters\n    japan = japan.split(\"\");\n\n    var font_size = 18;\n    var columns = ref.width/font_size; //number of columns for the rain\n    //an array of drops - one per column\n    var drops = [];\n    //x below is the x coordinate\n    //1 = y co-ordinate of the drop(same for every drop initially)\n    for(var x = 0; x < columns; x++)\n      drops[x] = 1;\n    \n    let colors = [\"#0F0\", \"#F00\", \"#00F\", \"#0FF\", \"#FF0\", \"#F0F\"]\n\n    let color = colors[Math.floor(Math.random() * colors.length)]\n\n    //drawing the characters\n    function draw()\n    {\n        if (ref.height !== window.innerHeight || ref.width !== window.innerWidth){\n            //making the canvas full screen\n            ref.height = window.innerHeight;\n            ref.width = window.innerWidth;\n        }\n      //Black BG for the canvas\n      //translucent BG to show trail\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.05)\";\n      ctx.fillRect(0, 0, ref.width, ref.height);\n      \n      ctx.fillStyle = color;\n      ctx.font = font_size + \"px arial\";\n      //looping over drops\n      for(var i = 0; i < drops.length; i++)\n      {\n        //a random japanese character to print\n        var text = japan[Math.floor(Math.random()*japan.length)];\n        //x = i*font_size, y = value of drops[i]*font_size\n        ctx.fillText(text, i*font_size, drops[i]*font_size);\n        \n        //sending the drop back to the top randomly after it has crossed the screen\n        //adding a randomness to the reset to make the drops scattered on the Y axis\n        if(drops[i]*font_size > ref.height && Math.random() > 0.975)\n          drops[i] = 0;\n        \n        //incrementing Y coordinate\n        drops[i]++;\n      }\n    }\n\n    setInterval(draw, 35);\n      // draw stuff\n  }\n\n  return (\n    <P.Container theme={theme}>\n      <canvas ref={setContext}></canvas>\n    </P.Container>\n  );\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { AppContext } from './../App/AppContext';\n\nconst F = {\n  Container: styled.div`\n    position: absolute;\n    bottom: 0;\n    opacity: 0.4;\n    right: 0;\n    font-size: 0.75rem;\n    padding-right: ${({ isMobile }) => (isMobile ? '1.5rem' : '1rem')};\n    z-index: 1;\n  `,\n  Text: styled.p`\n    transition: color 0.5s linear;\n    color: ${({ theme }) => theme.tertiaryTextColor};\n  `,\n  Link: styled.a`\n    transition: color 0.5s linear;\n    text-decoration: none;\n    color: ${({ theme }) => theme.secondaryTextColor};\n  `,\n};\n\nexport const Footer = () => {\n  const { theme, isMobile } = useContext(AppContext);\n\n  return (\n    <F.Container isMobile={isMobile}>\n      <F.Text theme={theme} aria-label='Designed by Adam Alston'>Designed by&nbsp;\n        <F.Link theme={theme} data-v2='creator' href='https://www.adamalston.com/'>Adam Alston</F.Link>\n      </F.Text>\n    </F.Container>\n  );\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Particles as ReactParticles } from 'react-tsparticles';\nimport { DEFAULT, AMONG_US, TECH_LOGOS, NYAN_CAT, SNOW, TRAILS, BACKGROUND, MATRIX, PENTAGONS } from './particles-presets';\n\nimport { AppContext } from './../App/AppContext';\n\nconst P = {\n  Container: styled.div`\n    transition: background-color 0.5s linear;\n    position: absolute;\n    background-color: ${({ theme }) => theme.background};\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: 50% 50%;\n    z-index: 0;\n  `,\n};\n\nexport const Particles = () => {\n  const { theme } = useContext(AppContext);\n\n  let presets = [DEFAULT, AMONG_US, TECH_LOGOS, NYAN_CAT, SNOW, TRAILS, BACKGROUND, MATRIX, PENTAGONS];\n\n  let CHOSEN = presets[Math.floor(Math.random() * presets.length)]\n\n  return (\n    <P.Container theme={theme}>\n      <ReactParticles width='100vw' height='100vh' options={MATRIX}/>\n    </P.Container>\n  );\n};\n","import React from 'react';\n\nimport { ThemeProvider } from './AppContext';\nimport { Toggle, Content, Buttons, Particles, Matrix } from './../components';\nimport './app.scss';\n\nconst App = () => {\n\n  let chance = Math.random() > 0.2;\n\n  return (\n    <ThemeProvider>\n      <div className='app'>\n        <Content />\n        <Buttons />\n        <Matrix />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}